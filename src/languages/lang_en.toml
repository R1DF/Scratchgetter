[meta]
name = "English"
file_name = "lang_en.toml"
author = "R1DF"
description = "The pre-installed English language file."
for_version = "1.0.0"

[linked]
dateFormatterFile = "date_formatters.df_lang_en"

[reusable]
# Queries
enterFileFolderQuery = "Enter file folder (Press Tab for hints) :"
enterFileNameQuery = "Enter file name:"
saveFileQuery = "Save the .toml file?"

# Other
yes = "Yes"
no = "No"
cancel = "Cancel"

connectingToAPIAwaiter = "Connecting to the Scratch API..."
collectingDataAwaiter = "Collecting request data..."

success = "Success."
error = "Error!"

enterToContinue = "Press Enter to continue."
enterToExit = "Press Enter to exit."
enterToRetry = "Press Enter to retry."

monthsFormatted = [
    "January",
    "February",
    "March",
    "April",
    "May",
    "June",
    "July",
    "August",
    "September",
    "October",
    "November",
    "December"
]

[tests]
testingConnection = "Testing internet connection..."
requestData = "Request data:"
internetConnectionSuccess = "Connection successful."
internetConnectionFailure = "Connection failed!\nPlease check your internet connection."

[templates]
user = """
USERNAME's user contents:
IS_ST

Join date and time: DATETIME
Location: COUNTRY
User ID: USER_ID
Profile ID: PROFILE_ID

ABOUT_ME

WIWO

API response link: https://api.scratch.mit.edu/users/USERNAME/\
"""

project = """
Project contents:
ID: PROJECT_ID
IS_REMIX

Title: \"TITLE\"
Author: AUTHOR
Token: PROJECT_TOKEN
Created on DATE_CREATED
Last edit on DATE_LAST_EDITED
Published on DATE_PUBLISHED

Views: VIEWS
Loves: LOVES
Favourites FAVOURITES
Remixes: REMIXES

INSTRUCTIONS

DESCRIPTION

HAS_COMMENTS

API response link: https//api.scratch.mit.edu/projects/PROJECT_ID/\
"""

studio = """
Studio contents:
ID: STUDIO_ID
ALLOWS_COMMENTING
ALLOWS_ANY_PROJECT

Host ID: HOST_ID
Created on DATE_CREATED
Last edit on DATE_LAST_EDITED

Comments: COMMENTS
Followers: FOLLOWERS
Managers: MANAGERS
Projects: PROJECTS

DESCRIPTION


API response link: https//api.scratch.mit.edu/studios/STUDIO_ID/\
"""

[introduction]
welcome = "Welcome to Scratchgetter v1.0.0., written by R1DF."
legalNotice = "All data is legally obtained by the Scratch API."
optionsQuery = "Select what you would like to do:"
options = [
    "Get user information (requires username)", # 0
    "Get project information (requires project ID)", # 1
    "Get studio information (requires studio ID)", # 2
    "View saved information (requires .toml file)", # 3
    "Change language", # 4
    "Quit" # 5
]

[get_user]
# Queries
enterUsernameQuery = "Enter username:"

# Awaiters
loadingSTStatusAwaiter = "Checking ST status..."
loadingJoinDateAwaiter = "Loading join date..."
loadingIDAwaiter = "Loading ID..."
loadingProfileContentsAwaiter = "Loading profile contents..."
loadingAboutMeAwaiter = "Loading \"About Me\" section..."
loadingWIWOAwaiter = "Loading \"What I'm Working On\" section..."
loadingCountryAwaiter = "Loading country..."
loadingPFPLinksAwaiter = "loading profile picture links..."

# Template Replacers
isSTReplacer = "The user is a member of the Scratch Team."
notSTReplacer = "The user is not a member of the Scratch Team."
hasAboutMeReplacer = "About Me"
noAboutMeReplacer = "The user's \"About Me\" section is empty."
hasWIWOReplacer = "What I'm Working On"
noWIWOReplacer = "The user's \"What I'm Working On\" section is empty."

# Other text
user = "User:"
userObtained = "User obtained."
imageAvailability = "Links to images for the profile pictures are accessible in a .toml file."
PFPLinks = "Profile pictures:"
userInexistent = "The user USERNAME does not exist."

[get_project]
# Queries
enterProjectIDQuery = "Enter project ID:"

# Awaiters
loadingTitleAwaiter = "Loading title..."
loadingVisibilityAwaiter = "Determining if the project is visible..."
loadingIsRemixAwaiter = "Determining if the project is a remix..."
loadingAuthorAwaiter = "Loading author..."
loadingTokenAwaiter = "Loading project token..."
loadingCreationDateAwaiter = "Loading creation date..."
loadingEditDateAwaiter = "Loading date since last edit..."
loadingPublishDateAwaiter = "Loading date since last published..."
loadingViewsAwaiter = "Loading views..."
loadingLovesAwaiter = "Loading loves..."
loadingFavouritesAwaiter = "Loading favourites..."
loadingRemixesAwaiter = "Loading remixes..."
loadingInstructionsAwaiter = "Loading instructions..."
loadingDescriptionAwaiter = "Loading project description..."
loadingHasCommentsAwaiter = "Determining if the project allows commenting..."
loadingThumbnailsAwaiter = "Loading thumbnails..."

# Template Replacers
isRemixReplacer = "The project is a remix. (Parent ID: PARENT_ID; Root ID: ROOT_ID)"
notRemixReplacer = "The project is not a remix."
hasInstructionsReplacer = "Instructions:"
noInstructionsReplacer = "The project's \"Instructions\" section is empty."
hasDescriptionReplacer = "Description:"
noDescriptionReplacer = "The project's \"Description\" section is empty."
hasCommentsReplacer = "The project allows comments to be added."
noCommentsReplacer = "The project's comments section is closed."

# Other text
projectID = "Project ID:"
projectInexistent = "The project with an ID of PROJECT_ID does not exist or isn't published."
thumbnailAvailability = "Links to images for the project's thumbnails are accessible in a .toml file."
thumbnailLinks = "Thumbnails:"

[get_studio]
# Queries
enterStudioIDQuery = "Enter studio ID:"

# Awaiters
loadingTitleAwaiter = "Loading studio name..."
loadingHostIDAwaiter = "Loading the studio host's ID..."
loadingDescriptionAwaiter = "Loading studio description..."
loadingHasCommentsAwaiter = "Determining if the studio allows commenting..."
loadingIsOpenAwaiter = "Determining if the studio allows anyone to add projects they want..."
loadingCommentsAwaiter = "Loading amount of comments..."
loadingFollowersAwaiter = "Loading amount of followers..."
loadingManagersAwaiter = "Loading amount of managers..."
loadingProjectsAwaiter = "Loading amount of projects..."
loadingCreationDateAwaiter = "Loading creation date..."
loadingEditDateAwaiter = "Loading date since last edit..."
loadingThumbnailAwaiter = "Loading studio thumbnail..."

# Template Replacers
hasDescriptionReplacer = "Description:"
noDescriptionReplacer = "The studio has an empty description."
hasCommentsReplacer = "The studio allows comments to be added."
noCommentsReplacer = "The studio's comment section is closed."
allowsAnyProjectsReplacer = "The studio allows projects to be added by any member."
forbidsAnyProjectsReplacer = "The studio doesn't allow projects to be added by non-members."

# Other text
studioID = "Studio ID:"
studioInexistent = "The studio with the ID STUDIO_ID does not exist."
thumbnailAvailability = "The link to the thumbnail of the studio is available in a text file."
thumbnailLink = "Link to thumbnail (170x100):"

[view_file]
# Queries
inDefaultPathQuery = "Is the file you wish to see saved in the default path?"
selectPathQuery = "Which sub-folder contains the file you would like to see?"
enterPathQuery = "Enter the path to the folder that contains the .toml file (Press Tab for hints) :"
noFiles = "There are no .toml files in the folder."
fileList = "List of viles to view:"
options = [
    "/users/ (contains user information)",
    "/projects/ (contains project information)",
    "/studios/ (contains studio information)"
]


[language_changing]
introduction = "Change language"
languageListIntroduction = "List of selectable languages:"
ifOne = "You only have one language installed. Please install more to select."
ifZero = "...Not cool. Now you have to reinstall me because I can't function without a valid language file pack."
selectLanguageQuery = "Select language:"
author = "Author:"
description = "Description:"
